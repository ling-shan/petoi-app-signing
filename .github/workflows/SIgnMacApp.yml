name: Sign, Notarize and Package Petoi Desktop App

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'App name in DMG (e.g., Petoi Desktop App.app)'
        required: true
        default: 'Petoi Desktop App.app'
      app_version:
        description: 'App version (used in DMG filename)'
        required: true
        default: '1.2.5'

jobs:
  build-and-package:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Unzip Application
        run: unzip mac/Petoi\ Desktop\ App.zip -d mac/

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Import Developer Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.MAC_CERTIFICATE_DATA }}
          p12-password: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}

      - name: Import Developer Install Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.MAC_INSTALLER_CERTIFICATE_DATA }}
          p12-password: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}

      - name: Code Sign the Application
        run: |
          APP_PATH="mac/${{ github.event.inputs.app_name }}"
          echo "Signing application at path: $APP_PATH"
          
          if [ ! -d "$APP_PATH" ]; then
            echo "Error: Application not found at path $APP_PATH"
            exit 1
          fi

          codesign --force --deep --strict --sign "Developer ID Application: Petoi LLC (H98JHTT3JH)" \
            --options runtime --entitlements mac/entitlements.plist \
            --timestamp "$APP_PATH"
          
          # 严格验证签名完整性（任何组件无效都会报错）
          echo "Verifying complete signature chain..."
          codesign -dvvv --deep --strict "$APP_PATH"  

      - name: Create DMG with Custom Background
        run: |
          # 创建临时目录用于构建DMG内容
          mkdir -p dist/dmg
          cp -R "mac/${{ github.event.inputs.app_name }}" dist/dmg/
          ln -s /Applications dist/dmg/Applications
          
          # 使用create-dmg工具创建DMG
          create-dmg \
            --volname "Petoi Desktop App" \
            --background "mac/Make_for_dmg.jpg" \
            --window-pos 400 200 \
            --window-size 940 580 \
            --icon-size 100 \
            --icon "${{ github.event.inputs.app_name }}" 180 200 \
            --app-drop-link 420 200 \
            --no-internet-enable \
            "dist/Petoi_Desktop_App_${{ github.event.inputs.app_version }}.dmg" \
            "dist/dmg/"

      - name: Sign the DMG
        run: |
          DMG_PATH="dist/Petoi_Desktop_App_${{ github.event.inputs.app_version }}.dmg"
          
          codesign --sign "Developer ID Installer: Petoi LLC (H98JHTT3JH)" \
            --timestamp --options runtime "$DMG_PATH"
          
          codesign -dv --verbose=4 "$DMG_PATH"

      - name: Notarize the DMG
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PWD: ${{ secrets.APPLE_ID_PWD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          DMG_PATH="dist/Petoi_Desktop_App_${{ github.event.inputs.app_version }}.dmg"
          nc -vz api.apple-cloudkit.com 443
          curl -I https://developer.apple.com
          echo "Submitting DMG for notarization: $DMG_PATH"
          echo "---------------------------------"
          # 提交DMG进行公证
          xcrun notarytool submit "$DMG_PATH" \
            --apple-id "$APPLE_ID" \
            --password "$APPLE_ID_PWD" \
            --team-id "$APPLE_TEAM_ID" \
            --wait \
            --verbose
          
          # 附加公证结果
          xcrun stapler staple "$DMG_PATH"

      - name: Upload Signed DMG
        uses: actions/upload-artifact@v4
        with:
          name: Petoi_Desktop_App_${{ github.event.inputs.app_version }}.dmg
          path: dist/Petoi_Desktop_App_${{ github.event.inputs.app_version }}.dmg
          retention-days: 30    