name: Sign, Notarize and Package Petoi Desktop App

on:
  workflow_dispatch:
    inputs:
      app_version:
        description: 'App version'
        required: true
        default: '1.2.5'

jobs:
  build-and-package:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install create-dmg
        run: brew install create-dmg

      - name: Import Developer Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.MAC_CERTIFICATE_DATA }}
          p12-password: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}
      
      - name: Unzip Application
        run: |
          unzip "Petoi Desktop App.zip"
          # clean the previous app's signature. it's important step
          find "$APP_NAME" -type f -exec codesign --remove-signature {} \;
          // there is a bug in python 3.7, we missed the site.pyo in this directory, so re-generate here.
          if [ ! -f "$APP_NAME/Contents/Resources/site.pyo" ]; then
              cp "$APP_NAME/Contents/Resources/site.pyc" "$APP_NAME/Contents/Resources/site.pyo"
          fi

      - name: Code Sign Application
        run: |
          APP_NAME="Petoi Desktop App.app"
          RESOURCES_PATH="$APP_NAME/Contents/Resources"
          SIGN_IDENTITY="Developer ID Application: Petoi LLC (H98JHTT3JH)"
          PYTHON_NOTARIZE_ZIP_PATH="$(pwd)/$RESOURCES_PATH/lib/python37.zip"
          PYTHON_TEMP_UNNOTARIZE_ZIP_PATH=$(mktemp -d)

          security find-identity -v | grep "$SIGN_IDENTITY" || {
              echo "Error: No valid signing certificate found"
              exit 1
          }
          unzip -q "$PYTHON_NOTARIZE_ZIP_PATH" -d "$PYTHON_TEMP_UNNOTARIZE_ZIP_PATH"
          find "$PYTHON_TEMP_UNNOTARIZE_ZIP_PATH" -name "*.dylib" -type f -exec \
              codesign --force --timestamp --options runtime \
              --sign "$SIGN_IDENTITY" {} \;
          rm -f "$PYTHON_NOTARIZE_ZIP_PATH" && cd "$PYTHON_TEMP_UNNOTARIZE_ZIP_PATH" && zip -q -r "$PYTHON_NOTARIZE_ZIP_PATH" ./* && cd - && rm -rf "$PYTHON_TEMP_UNNOTARIZE_ZIP_PATH"
          find "$APP_NAME/Contents/Frameworks" "$APP_NAME/Contents/Resources" \
              \( -name "*.dylib" -o -name "*.so" \) -exec \
              codesign --force --options runtime \
              --timestamp --sign "$SIGN_IDENTITY" {} \;
          codesign --force --options runtime \
              --sign "$SIGN_IDENTITY" \
              --timestamp "$APP_NAME/Contents/Resources/resources/avrdudeMac/avrdude"
          codesign --force --options runtime \
              --sign "$SIGN_IDENTITY" \
              --timestamp "$APP_NAME/Contents/Resources/resources/esptoolMac/esptool"
          codesign --force --options runtime \
              --sign "$SIGN_IDENTITY" \
              --timestamp "$APP_NAME/Contents/MacOS/python"
          codesign --force --options runtime \
              --sign "$SIGN_IDENTITY" \
              --timestamp "$APP_NAME/Contents/MacOS/Petoi Desktop App"
          codesign --force --options runtime \
              --verbose=2 \
              --entitlements "entitlements.plist" \
              --sign "$SIGN_IDENTITY" \
              --timestamp "$APP_NAME"
          codesign --verify --verbose=4 "$APP_NAME" || {
              echo "❌ Overall .app signature verification failed"
              exit 1
          }

      - name: Notarize Application
        run: |
          APP_NAME="Petoi Desktop App.app"
          APP_VER=${{ github.event.inputs.app_version }}
          APPLE_ID="${{ secrets.APPLE_ID }}"
          APPLE_ID_PWD="${{ secrets.APPLE_ID_PWD }}"
          APPLE_TEAM_ID="${{ secrets.APPLE_TEAM_ID }}"
          NOTARIZE_ZIP_PATH="dist/Petoi_Desktop_App_$APP_VER-notarize.zip"
          mkdir -p dist
          rm -f "$NOTARIZE_ZIP_PATH"
          zip -q -r -y "$NOTARIZE_ZIP_PATH" "$APP_NAME"
              echo "✅ Generated notarization ZIP: $NOTARIZE_ZIP_PATH"
          SUBMISSION_OUTPUT=$(xcrun notarytool submit "$NOTARIZE_ZIP_PATH" \
              --apple-id "$APPLE_ID" --password "$APPLE_ID_PWD" \
              --team-id "$APPLE_TEAM_ID" --wait --verbose 2>&1)
          SUBMISSION_ID=$(echo "$SUBMISSION_OUTPUT" | grep -oE 'id: [0-9a-f-]+' | cut -d' ' -f2 | head -n1)
          if ! echo "$SUBMISSION_OUTPUT" | grep -q "status: Accepted"; then
              echo "❌ Notarization failed"
              echo "=== Notarization Log ==="
              xcrun notarytool log "$SUBMISSION_ID" --apple-id "$APPLE_ID" --password "$APPLE_ID_PWD" --team-id "$APPLE_TEAM_ID"
              exit 1
          fi
              echo "✅ Notarization passed"
          xcrun stapler staple "$APP_NAME"
          xcrun stapler validate "$APP_NAME" || { echo "❌ .app stapling failed"; exit 1; }
          spctl -a -v "$APP_NAME"  || { echo "❌ .app verification failed"; exit 1; }
          echo "✅ .app verification and stapling successful"

      - name: Create Distribution DMG
        run: |
          APP_NAME="Petoi Desktop App.app"
          APP_VER=${{ github.event.inputs.app_version }}
          DISTR_DMG_PATH="dist/Petoi_Desktop_App_$APP_VER.dmg"
          mkdir -p dist/dmg_final
          cp -R "$APP_NAME" dist/dmg_final/
          rm -f dist/dmg_final/Applications
          create-dmg \
              --volname "$APP_NAME" \
              --background "Make_for_dmg.jpg" \
              --window-pos 400 200 \
              --window-size 960 540 \
              --icon-size 100 \
              --icon "$APP_NAME" 350 280 \
              --app-drop-link 600 280 \
              --no-internet-enable \
              "$DISTR_DMG_PATH" \
              "dist/dmg_final/"
          echo "✅ Generated final DMG: $DISTR_DMG_PATH"
          SIGN_IDENTITY="Developer ID Application: Petoi LLC (H98JHTT3JH)"
          codesign --force --timestamp --options runtime \
              --sign "$SIGN_IDENTITY" \
              "$DISTR_DMG_PATH"
          codesign --verify --verbose=1 "$DISTR_DMG_PATH" || {
              echo "❌ Final DMG signing failed"
              exit 1
          }
          echo "✅ Final DMG signing verification passed"

      - name: Upload DMG
        uses: actions/upload-artifact@v4
        with:
          name: Petoi_Desktop_App_${{ github.event.inputs.app_version }}.dmg
          path: dist/Petoi_Desktop_App_${{ github.event.inputs.app_version }}.dmg
          retention-days: 30
