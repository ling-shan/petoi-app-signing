name: Sign and Notarize Petoi Desktop App and Create DMG

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'App name in DMG (e.g., Petoi Desktop App.app)'
        required: true
        default: 'Petoi Desktop App.app'

jobs:
  # sign for python2app mac app
  sign-and-notarize:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Unzip Petoi Desktop App.zip
        run: unzip mac/Petoi\ Desktop\ App.zip -d mac/

      - name: Import Developer Certificates
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.MAC_CERTIFICATE_DATA }}
          p12-password: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}

      - name: Code Sign the Unzipped App
        run: |
          APP_PATH="mac/Petoi Desktop App.app"
          echo "Signing unzipped app at path: $APP_PATH"
          
          if [ ! -d "$APP_PATH" ]; then
            echo "Error: App not found at path $APP_PATH"
            exit 1
          fi
          
          codesign --force --deep --sign "Developer ID Application: Petoi LLC (H98JHTT3JH)" \
            --options runtime --entitlements entitlements.plist \
            --timestamp "$APP_PATH"
          
          codesign -dv --verbose=4 "$APP_PATH"

      - name: Unmount DMG
        run: |
          hdiutil detach temp_dmg -force

      - name: Create DMG from Signed App
        run: |
          mkdir -p dist
          
          hdiutil create -volname "Petoi Desktop App" \
            -srcfolder "mac/Petoi Desktop App.app" \
            -ov -format UDZO -imagekey zlib-level=9 \
            -fs HFS+ -layout SPUD \
            -srcfolder "mac/Petoi Desktop App.app" \
            -icon "mac/logo.icns" \
            -background "mac/Make_for_dmg.jpg" \
            "dist/Petoi_Desktop_App.dmg"

      - name: Sign the DMG
        run: |
          DMG_PATH="dist/signed_${{ github.event.inputs.dmg_path }}"
          
          # 使用Developer ID Installer证书签名DMG
          # codesign --sign "Developer ID Installer: Your Name (TEAMID)" \
          #   --timestamp --options runtime "$DMG_PATH"

          codesign --sign "Developer ID Installer: Petoi LLC (H98JHTT3JH)" \
            --timestamp --options runtime "$DMG_PATH"
          
          # 验证DMG签名
          codesign -dv --verbose=4 "$DMG_PATH"

      - name: Notarize the DMG
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PWD: ${{ secrets.APPLE_ID_PWD }}
          APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}
        run: |
          DMG_PATH="dist/signed_${{ github.event.inputs.dmg_path }}"
          
          # 提交DMG进行公证
          xcrun notarytool submit "$DMG_PATH" \
            --apple-id "$APPLE_ID" \
            --password "$APPLE_ID_PWD" \
            --team-id "$APPLE_TEAM_ID" \
            --wait
          
          xcrun stapler staple "$DMG_PATH"

      - name: Upload Signed DMG
        uses: actions/upload-artifact@v4
        with:
          name: signed-${{ github.event.inputs.dmg_path }}
          path: dist/signed_${{ github.event.inputs.dmg_path }}
